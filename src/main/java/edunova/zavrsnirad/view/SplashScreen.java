/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edunova.zavrsnirad.view;

import edunova.zavrsnirad.controller.ObradaKorisnik;
import edunova.zavrsnirad.controller.ObradaOperater;
import edunova.zavrsnirad.util.HibernateUtil;
import edunova.zavrsnirad.util.PocetniInsert;
import edunova.zavrsnirad.util.PocetniInsertNovo;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.apache.commons.imaging.Imaging;
import org.hibernate.Session;


/**
 *
 * @author Admin
 */
public class SplashScreen extends javax.swing.JFrame {
    
    private int i = 0;
    private boolean hibernateGotov;

    /**
     * Creates new form SplashScreen
     */
    public SplashScreen() {
        initComponents();
        postavke();
        slika();
    }
    
    private void postavke(){
        i = 0;
        hibernateGotov = false;
        
        Ucitanje ucitanje = new Ucitanje();
        ucitanje.start();
        TijekUcitanja tijekUcitanja = new TijekUcitanja();
        tijekUcitanja.start();
        
    }
    private void slika(){
        try {
            File nvidia = new File("slike" + File.separator + "splashscreen" + File.separator + "nvidia.png");
            ImageIcon ii;
            
                ii = new ImageIcon(Imaging.getBufferedImage(nvidia)
                        .getScaledInstance(606, 536, Image.SCALE_DEFAULT));
            
            lblSlika.setIcon(ii);
            System.out.println(nvidia.getAbsolutePath());
                    
        } catch (Exception e) {
        }
    }
    
    private class TijekUcitanja extends Thread {

        @Override
        public void run() {
            if (hibernateGotov) {
                return;
            }
            try {
                pbUcitanje.setValue(++i);
                Thread.sleep(1000);
                run();
            } catch (InterruptedException ex) {

            }
        }
    }
    
   
    
    private class Ucitanje extends Thread {

        @Override
        public void run() {
            Session s = HibernateUtil.getSession();
            if (s.getMetamodel().getEntities().size() > 0) {
                if (new ObradaKorisnik().read().isEmpty()) {
                    PocetniInsertNovo.inicijalniPodaci();
                }
                hibernateGotov = true;
                for (int t = i; t < 100; t++) {
                    try {
                        pbUcitanje.setValue(++i);
                        Thread.sleep(3);
                    } catch (InterruptedException ex) {

                    }
                }

                new Autorizacija().setVisible(true);
                dispose();
            } else {
                JOptionPane.showMessageDialog(getRootPane(), "Problem s povezivanje na bazu");
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pbUcitanje = new javax.swing.JProgressBar();
        lblSlika = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setType(java.awt.Window.Type.UTILITY);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pbUcitanje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(lblSlika, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblSlika, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pbUcitanje, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblSlika;
    private javax.swing.JProgressBar pbUcitanje;
    // End of variables declaration//GEN-END:variables
}
